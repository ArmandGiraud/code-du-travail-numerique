#

.quality_stage: &quality_stage
  stage: "Code Quality"
  dependencies: []

.master_based_stage: &master_based_stage
  variables:
    CI_PROJECT_DIR: /app
    GIT_STRATEGY: none
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
  before_script:
    - cd /app

.python_based_stage: &python_based_stage
  image: python:$PYTHON_VERSION
  variables:
    PIPENV_VENV_IN_PROJECT: 1
    PIPENV_IGNORE_VIRTUALENVS: 1
    PYTHONPATH: .
  # HAXX(douglasduteil): use multi-line script
  # "Official" workaround to merge YAML array
  # see https://gitlab.com/gitlab-org/gitlab-ce/issues/19677#note_13008199
  before_script: &python_based_install_step |-
    set -xeo pipefail;
    echo;
    apk add --no-cache build-base;
    pip install --upgrade pip;
    pip install pipenv==$PIP_VERSION;
    pipenv install --dev;
    set +x;

#

Lint @cdtn/api:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @cdt/api lint

Lint @cdtn/ui:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @cdt/ui lint

Lint @cdtn/frontend:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @cdt/frontend lint

Lint @cdtn/data:
  <<: *quality_stage
  <<: *python_based_stage
  before_script:
    - cd packages/code-du-travail-data
    - *python_based_install_step
  script:
    - pipenv run pylint --output-format=colorized search

#

Test @cdtn/frontend:
  <<: *quality_stage
  <<: *master_based_stage
  script:
    - yarn workspace @cdt/frontend test --coverage
  after_script:
    - CI_PROJECT_DIR=/app npx codecov -F frontend

Test @cdtn/api:
  <<: *quality_stage
  <<: *master_based_stage
  services:
    - docker:dind
  dependencies:
    - Prepare .env file
  variables:
    ELASTICSEARCH_URL: http://localhost:9200
    ELASTICSEARCH_LOG_LEVEL: info
  before_script:
    # NOTE(douglasduteil): required inside the *master_based_stage
    - cd /app

    # NOTE(douglasduteil): copy "Prepare .env file" artifacts
    - cp /SocialGouv/code-du-travail-numerique/.env /app
    - cp /SocialGouv/code-du-travail-numerique/docker-compose.yml /app
    - cp /SocialGouv/code-du-travail-numerique/docker-compose.override.yml /app
    - cp /SocialGouv/code-du-travail-numerique/codecov.yml /app

    # Install docker compose
    - apk update && apk add --no-cache bash curl py-pip openssl
    - pip install docker-compose==${DOCKER_COMPOSE_VERSION}

    - docker-compose up -d elasticsearch

    # NOTE(douglasduteil): the elasticsearch health check must be last
    # As we block the job waiting for elasticsearch to be up.
    - |-
      retry=60;
      while
        ! curl -sS "http://localhost:9200/_cat/health?h=status" &&
        [[ $(( retry-- )) -gt 0 ]];
      do echo "Waiting for Elasticsearch to go Green ($retry)" ; sleep 1 ; done ;
  script:
    - yarn workspace @cdt/api test --coverage
  after_script:
    - CI_PROJECT_DIR=/app npx codecov -F api

Test @cdtn/data:
  <<: *quality_stage
  <<: *python_based_stage
  before_script:
    - cd packages/code-du-travail-data
    - *python_based_install_step
  script:
    - pipenv run python search/indexing/document_slug_checker.py -v
